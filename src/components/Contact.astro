---
interface ContactInfo {
  icon: string;
  title: string;
  details: string[];
  link?: {
    href: string;
    text: string;
  };
}

const contactInfo: ContactInfo[] = [
  {
    icon: "location",
    title: "Bezoekadres",
    details: ["Industrieweg 10", "5061 KG Oisterwijk"],
    link: {
      href: "https://goo.gl/maps/123",
      text: "Route plannen"
    }
  },
  {
    icon: "phone",
    title: "Telefoon",
    details: ["013-123 45 67", "Ma-Vr: 08:00-17:00"],
    link: {
      href: "tel:0131234567",
      text: "Bel direct"
    }
  },
  {
    icon: "mail",
    title: "E-mail",
    details: ["info@vantilburgkozijnen.nl"],
    link: {
      href: "mailto:info@vantilburgkozijnen.nl",
      text: "Stuur een e-mail"
    }
  }
];

const projectTypes = [
  { value: "nieuwbouw", label: "Nieuwbouw" },
  { value: "renovatie", label: "Renovatie" },
  { value: "restauratie", label: "Restauratie" },
  { value: "verduurzaming", label: "Verduurzaming" }
];

const timeSlots = [
  { value: "ochtend", label: "Ochtend (09:00 - 12:00)" },
  { value: "middag", label: "Middag (12:00 - 17:00)" }
];
---

<section id="contact" class="py-12 sm:py-16 md:py-20 bg-gray-50">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center max-w-3xl mx-auto mb-12 sm:mb-16">
      <h2 class="text-3xl sm:text-4xl md:text-5xl font-bold text-text-dark mb-4 sm:mb-6 font-montreal">
        Contact
      </h2>
      <p class="text-base sm:text-lg text-text-light font-commons">
        Neem contact met ons op voor een vrijblijvend adviesgesprek of offerte.
      </p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 sm:gap-8 mb-12 sm:mb-16">
      {contactInfo.map(info => (
        <div class="bg-white rounded-lg p-6 sm:p-8 shadow-md hover:shadow-lg transition-shadow duration-300">
          <div class="flex flex-col sm:flex-row lg:flex-col items-center text-center lg:text-center gap-4 sm:gap-6">
            <div class="w-12 h-12 sm:w-14 sm:h-14 bg-primary-600/10 rounded-lg flex items-center justify-center flex-shrink-0">
              <svg class="w-6 h-6 sm:w-7 sm:h-7 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                {info.icon === 'location' && (
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                )}
                {info.icon === 'phone' && (
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                )}
                {info.icon === 'mail' && (
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                )}
              </svg>
            </div>
            <div class="flex-1">
              <h3 class="text-lg sm:text-xl font-bold text-text-dark mb-2 sm:mb-3 font-montreal">
                {info.title}
              </h3>
              <div class="space-y-1">
                {info.details.map(detail => (
                  <p class="text-base text-text-light font-commons">{detail}</p>
                ))}
              </div>
              {info.link && (
                <a
                  href={info.link.href}
                  class="inline-block mt-3 sm:mt-4 text-primary-600 hover:text-primary-700 font-medium transition-colors duration-200"
                >
                  {info.link.text} â†’
                </a>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>

    <div class="bg-white rounded-lg p-6 sm:p-8 lg:p-12 shadow-md">
      <form id="contactForm" class="max-w-2xl mx-auto">
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
          <div>
            <label class="block text-sm font-medium text-text-dark mb-2" for="name">
              Naam
            </label>
            <input
              type="text"
              id="name"
              name="name"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-600 focus:border-transparent transition-shadow duration-200"
              required
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-text-dark mb-2" for="email">
              E-mail
            </label>
            <input
              type="email"
              id="email"
              name="email"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-600 focus:border-transparent transition-shadow duration-200"
              required
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-text-dark mb-2" for="phone">
              Telefoon
            </label>
            <input
              type="tel"
              id="phone"
              name="phone"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-600 focus:border-transparent transition-shadow duration-200"
              required
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-text-dark mb-2" for="project_type">
              Type project
            </label>
            <select
              id="project_type"
              name="project_type"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-600 focus:border-transparent transition-shadow duration-200"
              required
            >
              <option value="">Selecteer type project</option>
              {projectTypes.map(type => (
                <option value={type.value}>{type.label}</option>
              ))}
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-text-dark mb-2" for="callback_time">
              Voorkeurstijd terugbellen
            </label>
            <select
              id="callback_time"
              name="callback_time"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-600 focus:border-transparent transition-shadow duration-200"
              required
            >
              <option value="">Selecteer voorkeurstijd</option>
              {timeSlots.map(slot => (
                <option value={slot.value}>{slot.label}</option>
              ))}
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-text-dark mb-2" for="preferred_date">
              Voorkeursdatum
            </label>
            <input
              type="date"
              id="preferred_date"
              name="preferred_date"
              min={new Date().toISOString().split('T')[0]}
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-600 focus:border-transparent transition-shadow duration-200"
              required
            />
          </div>
          <div class="sm:col-span-2">
            <label class="block text-sm font-medium text-text-dark mb-2" for="message">
              Bericht
            </label>
            <textarea
              id="message"
              name="message"
              rows="4"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-600 focus:border-transparent transition-shadow duration-200"
              required
            ></textarea>
          </div>
          <div class="sm:col-span-2">
            <button
              type="submit"
              class="w-full sm:w-auto px-6 py-3 bg-primary-600 text-white font-medium rounded-lg hover:bg-primary-700 transition-colors duration-200"
            >
              Verstuur bericht
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>
</section>

<script>
  const form = document.getElementById('contactForm') as HTMLFormElement;
  
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);
    
    try {
      // Hier zou je normaal gesproken een API call maken
      // Voor nu simuleren we een succesvolle verzending
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // Toon succes bericht
      alert('Bedankt voor uw bericht! We nemen zo spoedig mogelijk contact met u op.');
      
      // Reset het formulier
      form.reset();
      
      // Stuur bevestigingsmail (dit zou normaal server-side gebeuren)
      const emailContent = `
        Beste ${data.name},
        
        Bedankt voor uw bericht. We hebben de volgende gegevens ontvangen:
        
        Type project: ${data.project_type}
        Voorkeurstijd: ${data.callback_time}
        Voorkeursdatum: ${data.preferred_date}
        
        We nemen zo spoedig mogelijk contact met u op.
        
        Met vriendelijke groet,
        R.VAN TILBURG KOZIJNEN
      `;
      
      // In een echte implementatie zou je hier een API call maken naar je backend
      console.log('Bevestigingsmail verstuurd:', emailContent);
      
    } catch (error) {
      alert('Er is iets misgegaan bij het versturen van het formulier. Probeer het later opnieuw.');
      console.error('Form submission error:', error);
    }
  });
</script>

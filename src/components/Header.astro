---
const links = [
  { text: "Home", href: "/" },
  { text: "Over ons", href: "#over-ons" },
  { text: "Diensten", href: "#diensten" },
  { text: "Projecten", href: "#projecten" },
  { text: "Contact", href: "#contact" },
];
---

<header class="fixed top-0 left-0 right-0 z-50 bg-white/90 backdrop-blur-md shadow-lg transition-all duration-300">
  <div class="container h-[var(--header-height)] flex items-center justify-between px-4 mx-auto">
    <!-- Logo -->
    <a href="/" class="relative z-10 transition-transform hover:scale-105 duration-300">
      <img src="/images/logo.svg" alt="R.VAN TILBURG KOZIJNEN" class="h-12 w-auto">
    </a>

    <!-- Desktop Navigation -->
    <nav class="hidden md:flex items-center space-x-8">
      {links.map(({ text, href }) => (
        <a
          href={href}
          class="nav-link text-sm font-medium text-gray-700 hover:text-primary-600 transition-all duration-300 relative py-2 group"
        >
          {text}
          <span class="absolute bottom-0 left-0 w-full h-0.5 bg-primary-600 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left"></span>
        </a>
      ))}
      <a
        href="#contact"
        class="btn btn-primary btn-sm shadow-md hover:shadow-xl hover:scale-105 transition-all duration-300"
      >
        Offerte aanvragen
      </a>
    </nav>

    <!-- Mobile Menu Button -->
    <button
      type="button"
      class="md:hidden relative z-10 p-2 rounded-lg text-gray-600 hover:bg-gray-100/80 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-primary-500/30 transition-all duration-200"
      aria-label="Toggle menu"
      data-toggle="mobile-menu"
    >
      <div class="w-6 h-6 flex flex-col justify-center space-y-1.5 transition-all duration-300">
        <span class="w-full h-0.5 bg-current transform transition-all duration-300 mobile-menu-bar"></span>
        <span class="w-full h-0.5 bg-current transform transition-all duration-300 mobile-menu-bar"></span>
        <span class="w-full h-0.5 bg-current transform transition-all duration-300 mobile-menu-bar"></span>
      </div>
    </button>

    <!-- Mobile Navigation -->
    <div
      class="mobile-menu fixed inset-0 bg-white/95 backdrop-blur-md z-40 transform translate-x-full transition-all duration-500 ease-in-out md:hidden"
      id="mobile-menu"
    >
      <div class="pt-[var(--header-height)] pb-6 px-4">
        <nav class="h-screen flex flex-col items-center justify-center space-y-8">
          {links.map(({ text, href }) => (
            <a
              href={href}
              class="text-xl font-medium text-gray-800 hover:text-primary-600 transition-all duration-300 relative group"
            >
              <span class="relative z-10">{text}</span>
              <span class="absolute inset-x-0 -bottom-2 h-0.5 bg-primary-600/20 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300"></span>
            </a>
          ))}
          <a
            href="#contact"
            class="btn btn-primary shadow-md hover:shadow-xl hover:scale-105 transition-all duration-300 mt-8"
          >
            Offerte aanvragen
          </a>
        </nav>
      </div>
    </div>
  </div>
</header>

<style>
  /* Active menu state */
  .nav-link.active {
    color: var(--color-primary-600);
  }
  
  .nav-link.active::after {
    width: 100%;
  }

  /* Mobile menu animation */
  .mobile-menu.open {
    transform: translateX(0);
  }

  .mobile-menu-button.open .mobile-menu-bar:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
  }

  .mobile-menu-button.open .mobile-menu-bar:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-button.open .mobile-menu-bar:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
  }
</style>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.querySelector('[data-toggle="mobile-menu"]');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      mobileMenuButton.setAttribute('aria-expanded', String(!isExpanded));
      mobileMenu.classList.toggle('open');
      mobileMenuButton.classList.toggle('open');
      document.body.classList.toggle('overflow-hidden');
    });
  }

  // Active menu item
  const navLinks = document.querySelectorAll('.nav-link');
  const sections = document.querySelectorAll('section[id]');

  function setActiveLink() {
    const scrollPosition = window.scrollY + 100;

    sections.forEach(section => {
      const sectionElement = section as HTMLElement;
      const sectionTop = sectionElement.offsetTop;
      const sectionHeight = sectionElement.offsetHeight;
      const sectionId = section.getAttribute('id');

      if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
        navLinks.forEach(link => {
          link.classList.remove('active');
          if (link.getAttribute('href') === `#${sectionId}`) {
            link.classList.add('active');
          }
        });
      }
    });
  }

  window.addEventListener('scroll', setActiveLink);
  setActiveLink();

  // Header scroll behavior
  const header = document.querySelector('header');
  let lastScroll = 0;

  window.addEventListener('scroll', () => {
    const currentScroll = window.pageYOffset;
    
    if (currentScroll <= 0) {
      header?.classList.remove('shadow-lg');
      return;
    }

    if (currentScroll > lastScroll && currentScroll > 100) {
      header?.classList.add('-translate-y-full', 'shadow-lg');
    } else {
      header?.classList.remove('-translate-y-full');
      header?.classList.add('shadow-lg');
    }

    lastScroll = currentScroll;
  });
</script>

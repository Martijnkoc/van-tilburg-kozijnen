---
interface Props {
  currentPath?: string;
}

const currentPath = Astro.url.pathname;

interface MenuItem {
  title: string;
  href: string;
  children?: MenuItem[];
}

const menuItems: MenuItem[] = [
  { title: "Over ons", href: "/over-ons" },
  { title: "Projecten", href: "/projecten" },
  { title: "Voor professionals", href: "/voor-professionals" },
  { title: "Contact", href: "/contact" },
];
---

<header 
  class="fixed top-0 left-0 right-0 z-50 transition-all duration-300 backdrop-blur-sm" 
  id="header"
  role="banner"
>
  <!-- Dark overlay for better text visibility -->
  <div class="absolute inset-0 bg-black/30 transition-opacity duration-300" id="header-overlay"></div>
  
  <nav class="relative mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-6" role="navigation" aria-label="Hoofdnavigatie">
    <div class="flex items-center justify-between">
      <!-- Logo with fallback -->
      <a href="/" class="flex-shrink-0" aria-label="Ga naar homepage">
        <img 
          src="/images/logo.svg" 
          alt="Van Tilburg Kozijnen" 
          class="h-10 w-auto"
          id="main-logo"
          onerror="this.onerror=null; this.src='/images/logo-fallback.png'; this.classList.add('logo-fallback')"
        />
      </a>

      <!-- Navigation -->
      <div class="hidden lg:flex lg:items-center lg:space-x-12" id="nav-links">
        {menuItems.map((item) => (
          <a
            href={item.href}
            class="text-white hover:text-orange-400 transition-colors duration-300 text-sm font-medium focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-transparent rounded-md px-2 py-1"
            aria-current={currentPath === item.href ? 'page' : undefined}
          >
            {item.title}
          </a>
        ))}
        <a 
          href="/contact" 
          class="ml-8 inline-flex items-center justify-center px-6 py-2 border border-transparent rounded-full text-sm font-medium text-white bg-orange-500 hover:bg-orange-600 transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-transparent"
        >
          Contact opnemen
        </a>
      </div>

      <!-- Mobile menu button -->
      <button 
        type="button"
        id="mobile-menu-button"
        class="lg:hidden inline-flex items-center justify-center p-2 rounded-md text-white hover:text-orange-400 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-transparent"
        aria-controls="mobile-menu"
        aria-expanded="false"
        aria-label="Open menu"
      >
        <span class="sr-only">Open menu</span>
        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>

    <!-- Mobile menu -->
    <div 
      class="lg:hidden" 
      id="mobile-menu" 
      aria-label="Mobiel menu"
      hidden
    >
      <div class="fixed inset-0 bg-gray-900/95 z-50 transition-opacity duration-300" id="mobile-menu-backdrop">
        <div class="fixed inset-y-0 right-0 max-w-full flex">
          <div class="w-full sm:max-w-sm bg-gray-900 transform transition-transform duration-300" id="mobile-menu-content">
            <div class="h-20 flex items-center justify-between px-6">
              <img 
                src="/images/logo.svg" 
                alt="Van Tilburg Kozijnen" 
                class="h-8 w-auto"
                onerror="this.onerror=null; this.src='/images/logo-fallback.png'; this.classList.add('logo-fallback')"
              />
              <button 
                type="button"
                id="close-menu-button"
                class="rounded-md text-white hover:text-orange-400 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-transparent"
                aria-label="Sluit menu"
              >
                <span class="sr-only">Sluit menu</span>
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
            <div class="px-6 pt-8 pb-12">
              <nav class="grid gap-y-10">
                {menuItems.map((item) => (
                  <a
                    href={item.href}
                    class="text-white text-base font-medium hover:text-orange-400 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-transparent"
                    aria-current={currentPath === item.href ? 'page' : undefined}
                  >
                    {item.title}
                  </a>
                ))}
                <a 
                  href="/contact" 
                  class="inline-flex items-center justify-center px-6 py-3 border border-transparent rounded-full text-base font-medium text-white bg-orange-500 hover:bg-orange-600 transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-orange-400 focus:ring-offset-2 focus:ring-offset-transparent"
                >
                  Contact opnemen
                </a>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<style>
  /* Smooth transitions */
  .transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }

  /* Animaties voor mobiel menu */
  #mobile-menu[hidden] {
    display: none;
  }

  #mobile-menu-backdrop {
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }

  #mobile-menu:not([hidden]) #mobile-menu-backdrop {
    opacity: 1;
  }

  #mobile-menu-content {
    transform: translateX(100%);
    transition: transform 0.3s ease-in-out;
  }

  #mobile-menu:not([hidden]) #mobile-menu-content {
    transform: translateX(0);
  }

  /* Fallback styling */
  .logo-fallback {
    filter: brightness(0) invert(1); /* Maakt PNG logo wit */
  }
</style>

<script>
  // Safely get elements with type checking
  const header = document.getElementById('header');
  const headerOverlay = document.getElementById('header-overlay');
  const mobileMenu = document.getElementById('mobile-menu');
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const closeMenuButton = document.getElementById('close-menu-button');
  const navLinks = document.querySelectorAll('#nav-links a:not([class*="bg-orange"])');

  if (!header || !headerOverlay || !mobileMenu || !mobileMenuButton || !closeMenuButton) {
    console.error('Een of meer vereiste elementen niet gevonden');
  } else {
    // Header scroll effect
    let lastScroll = 0;
    window.addEventListener('scroll', () => {
      const currentScroll = window.pageYOffset;
      if (currentScroll <= 0) {
        header.classList.remove('bg-primary-900/95');
        headerOverlay.classList.remove('opacity-0');
      } else {
        header.classList.add('bg-primary-900/95');
        headerOverlay.classList.add('opacity-0');
      }
      lastScroll = currentScroll;
    });

    // Mobile menu functionality
    const toggleMenu = (show: boolean) => {
      mobileMenu.hidden = !show;
      mobileMenuButton.setAttribute('aria-expanded', show.toString());
      if (show) {
        document.body.style.overflow = 'hidden';
        // Focus op sluit-knop voor toegankelijkheid
        setTimeout(() => closeMenuButton.focus(), 100);
      } else {
        document.body.style.overflow = '';
        // Focus terug naar menu-knop
        setTimeout(() => mobileMenuButton.focus(), 100);
      }
    };

    mobileMenuButton.addEventListener('click', () => toggleMenu(true));
    closeMenuButton.addEventListener('click', () => toggleMenu(false));

    // Sluit menu met Escape toets
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !mobileMenu.hidden) {
        toggleMenu(false);
      }
    });

    // Sluit menu bij klikken buiten menu
    mobileMenu.addEventListener('click', (e) => {
      if (e.target === mobileMenu) {
        toggleMenu(false);
      }
    });
  }
</script>
